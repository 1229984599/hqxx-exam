# 优化版本的docker-compose配置
# 适用于Dockerfile.optimized-v2和v3（需要外部服务）

version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile.optimized-v2  # 或 Dockerfile.optimized-v3
    container_name: hqxx-exam-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///app/data/db.sqlite3
      - ENVIRONMENT=production
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      - redis
      - nginx
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: hqxx-exam-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: hqxx-exam-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-optimized.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录（可选）
    depends_on:
      - app
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  app_data:
    driver: local
  app_logs:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  app_network:
    driver: bridge

# 开发环境配置（可选）
---
version: '3.8'

# 开发环境 - 使用原始Dockerfile
x-development: &development
  services:
    app:
      build:
        context: .
        dockerfile: Dockerfile  # 使用原始Dockerfile
      ports:
        - "8000:8000"
      volumes:
        - ./api:/app/api
        - ./admin/dist:/app/static/admin
        - ./home/dist:/app/static/home
      environment:
        - ENVIRONMENT=development
        - DEBUG=true

# 生产环境 - 使用优化Dockerfile
x-production: &production
  services:
    app:
      build:
        context: .
        dockerfile: Dockerfile.optimized-v2
      environment:
        - ENVIRONMENT=production
        - DEBUG=false
