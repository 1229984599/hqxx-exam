# nginx配置文件
# 禁用默认错误日志，使用自定义路径
error_log /app/logs/nginx/error.log warn;
worker_processes auto;
pid /run/nginx/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 设置临时目录到应用目录下
    client_body_temp_path /app/logs/nginx/client_temp;
    proxy_temp_path /app/logs/nginx/proxy_temp;
    fastcgi_temp_path /app/logs/nginx/fastcgi_temp;
    uwsgi_temp_path /app/logs/nginx/uwsgi_temp;
    scgi_temp_path /app/logs/nginx/scgi_temp;

    # 日志格式（增强性能监控）
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /app/logs/nginx/access.log main;

    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # 隐藏 Nginx 版本信息
    server_tokens off;

    # 防止重定向时丢失端口号
    port_in_redirect off;
    server_name_in_redirect off;

    # 客户端配置优化
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # 文件缓存优化
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/html
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:50m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:50m rate=2r/s;

    # 上游后端服务
    upstream api_backend {
        server 127.0.0.1:8000;
        keepalive 32;
    }

    # 主服务器配置
    server {
        listen 80;
        server_name localhost;
        root /app/static;
        index index.html;

        # 安全头（增强）
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;

        # API代理（增强限流）
        location /api/ {
            # 限流
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # 缓冲设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # 文件上传 API（特殊限流）
        location /api/v1/upload/ {
            limit_req zone=upload burst=5 nodelay;

            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 上传超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 关闭缓冲以支持大文件上传
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # API文档代理
        location /docs {
            proxy_pass http://api_backend/docs;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # OpenAPI JSON
        location /openapi.json {
            proxy_pass http://api_backend/api/v1/openapi.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 处理 /admin 精确匹配，直接提供内容，不重定向
        location = /admin {
            alias /app/static/admin/;
            try_files /index.html =404;
        }

        # TinyMCE 语言包和皮肤资源
        location /langs/ {
            alias /app/static/admin/langs/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /tinymce/ {
            alias /app/static/admin/tinymce/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 管理后台目录
        location /admin/ {
            alias /app/static/admin/;
            try_files $uri $uri/ /admin/index.html;
            index index.html;

            # 缓存静态资源
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # 前台页面
        location / {
            root /app/static/home;
            try_files $uri $uri/ /index.html;
            
            # 缓存静态资源
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
